name: DevSecOps Pipeline (Self-hosted)

on:
  push:
    branches: [ main ]

jobs:
  devsecops:
    runs-on: self-hosted

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3

    - name: Detectar lenguaje automáticamente
      run: |
        if [ -f "package.json" ]; then
          echo "APP_LANG=nodejs" >> $GITHUB_ENV
        elif [ -f "requirements.txt" ]; then
          echo "APP_LANG=python" >> $GITHUB_ENV
        elif [ -f "pom.xml" ]; then
          echo "APP_LANG=java" >> $GITHUB_ENV
        else
          echo "No se detectó lenguaje automáticamente."
          exit 1
        fi

    - name: Instalar dependencias según lenguaje si faltan
      run: |
        if [ "$APP_LANG" = "python" ]; then
          command -v pip3 || sudo apt update && sudo apt install -y python3-venv python3-pip
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt || true
        elif [ "$APP_LANG" = "nodejs" ]; then
          command -v npm || sudo apt update && sudo apt install -y nodejs npm
          npm install || true
        elif [ "$APP_LANG" = "java" ]; then
          command -v mvn || sudo apt update && sudo apt install -y maven default-jdk
          mvn clean install || true
        fi

    - name: Ejecutar CodeQL (SAST)
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ env.APP_LANG }}
    - name: Analizar con CodeQL
      uses: github/codeql-action/analyze@v3

    - name: Instalar Trivy (si falta, para SBOM/SCA)
      run: |
        if ! command -v trivy &> /dev/null; then
          sudo apt update
          sudo apt install -y wget gnupg lsb-release apt-transport-https
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key \
            | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] \
            https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" \
            | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt update
          sudo apt install -y trivy
        fi

    - name: Ejecutar Trivy (SBOM + SCA)
      run: |
        trivy fs . --exit-code 0 --severity HIGH,CRITICAL || true

    - name: Descargar OWASP ZAP 2.16.1 (si no existe)
      run: |
        if [ ! -f "zap.tar.gz" ]; then
          wget https://sourceforge.net/projects/zap.mirror/files/v2.16.1/ZAP_2.16.1_Linux.tar.gz/download -O zap.tar.gz
        fi

    - name: Extraer y preparar ZAP
      run: |
        if [ ! -d "zap" ]; then
          tar -xzf zap.tar.gz
          mv ZAP_2.16.1 zap
          ln -sf "$(pwd)/zap/zap.sh" zaproxy
        fi

    - name: Levantar la app para DAST
      run: |
        if [ "$APP_LANG" = "python" ]; then
          source venv/bin/activate
          nohup python3 app.py > app.log 2>&1 &
        elif [ "$APP_LANG" = "nodejs" ]; then
          nohup npm start > app.log 2>&1 &
        elif [ "$APP_LANG" = "java" ]; then
          nohup java -jar target/*.jar > app.log 2>&1 &
        fi
        sleep 10

    - name: Escaneo DAST con ZAP
      run: |
        ./zaproxy -cmd -quickurl http://localhost:5000 -quickout zap_report.html || true

    - name: Preparar y subir reporte ZAP si existe
      if: always()
      run: |
        if [ -f "zap_report.html" ]; then
          mkdir -p reporte
          mv zap_report.html reporte/
        fi

    - name: Subir artefacto
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: reporte-zap
        path: reporte/
